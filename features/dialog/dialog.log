Running "jshint:all" (jshint) task
>> 1 file lint free.

Running "exec:run_cucumber_tests" (exec) task
[36m@dialog @receive_message[39m
Feature: new message

  All valid messages
  should be captured in their raw form
  persisted
  and then denorm'd to all related services

  Why:
  - we can run sentiment models on user's text to evaluate their state of mind
  - in the future, we will likely get in the intent business ourselves.  having the raw data will be useful.
  - in any consumer analytics environment, hold on to ALL the data you can, for as LONG as you can.

  Rules:
  - the inbound message must containt a bot key (which kong decodes to org and botId) as well as p/pId

  [36m@for_testing @acceptance @valid_message_received @for_testing[39m
  Scenario: Received valid message from existing user for active dialog
    [32mGiven there are Identity records as follows:[39m
      | [32midentityKey  [39m |
      | [32mTIN_RECORD   [39m |
      | [32mBRONZE_RECORD[39m |
      | [32mGOLD_RECORD  [39m |
    [33mWhen a valid new message is received for an existing user who is actively dialoging[39m
    [33mThen save the Message[39m
    [33mAnd update Dialog with Message[39m
    [33mAnd update Identity with Message[39m
    [33mAnd create a summarized Event for Message[39m

  [36m@acceptance @valid_message_received @for_testing[39m
  Scenario: Received valid message from existing user for new dialog
    [32mGiven there are Identity records as follows:[39m
      | [32midentityKey  [39m |
      | [32mTIN_RECORD   [39m |
      | [32mBRONZE_RECORD[39m |
      | [32mGOLD_RECORD  [39m |
    [33mWhen a valid new message is received for an existing user starting a new dialog[39m
    [33mThen save the Message[39m
    [33mAnd update Dialog with Message[39m
    [33mAnd update Identity with Message[39m
    [33mAnd create a summarized Event for Message[39m

  [36m@acceptance @valid_message_received @for_testing[39m
  Scenario: Received valid message from new user
    [32mGiven there are Identity records as follows:[39m
      | [32midentityKey  [39m |
      | [32mTIN_RECORD   [39m |
      | [32mBRONZE_RECORD[39m |
      | [32mGOLD_RECORD  [39m |
    [33mWhen a valid new message is received from a new user[39m
    [33mThen save the Message[39m
    [33mAnd update Dialog with Message[39m
    [33mAnd update Identity with Message[39m
    [33mAnd create a summarized Event for Message[39m

Warnings:

1) Scenario: [1mReceived valid message from existing user for active dialog[22m - [90mfeatures/dialog/post_message.feature:28[39m
   Step: [1mWhen a valid new message is received for an existing user who is actively dialoging[22m - [90mfeatures/dialog/post_message.feature:29[39m
   Message:
     [33mUndefined. Implement with the following snippet:

       this.When(/^a valid new message is received for an existing user who is actively dialoging$/, function (callback) {
         // Write code here that turns the phrase above into concrete actions
         callback(null, 'pending');
       });[39m

2) Scenario: [1mReceived valid message from existing user for active dialog[22m - [90mfeatures/dialog/post_message.feature:28[39m
   Step: [1mThen save the Message[22m - [90mfeatures/dialog/post_message.feature:30[39m
   Message:
     [33mUndefined. Implement with the following snippet:

       this.Then(/^save the Message$/, function (callback) {
         // Write code here that turns the phrase above into concrete actions
         callback(null, 'pending');
       });[39m

3) Scenario: [1mReceived valid message from existing user for active dialog[22m - [90mfeatures/dialog/post_message.feature:28[39m
   Step: [1mAnd update Dialog with Message[22m - [90mfeatures/dialog/post_message.feature:31[39m
   Message:
     [33mUndefined. Implement with the following snippet:

       this.Then(/^update Dialog with Message$/, function (callback) {
         // Write code here that turns the phrase above into concrete actions
         callback(null, 'pending');
       });[39m

4) Scenario: [1mReceived valid message from existing user for active dialog[22m - [90mfeatures/dialog/post_message.feature:28[39m
   Step: [1mAnd update Identity with Message[22m - [90mfeatures/dialog/post_message.feature:32[39m
   Message:
     [33mUndefined. Implement with the following snippet:

       this.Then(/^update Identity with Message$/, function (callback) {
         // Write code here that turns the phrase above into concrete actions
         callback(null, 'pending');
       });[39m

5) Scenario: [1mReceived valid message from existing user for active dialog[22m - [90mfeatures/dialog/post_message.feature:28[39m
   Step: [1mAnd create a summarized Event for Message[22m - [90mfeatures/dialog/post_message.feature:33[39m
   Message:
     [33mUndefined. Implement with the following snippet:

       this.Then(/^create a summarized Event for Message$/, function (callback) {
         // Write code here that turns the phrase above into concrete actions
         callback(null, 'pending');
       });[39m

6) Scenario: [1mReceived valid message from existing user for new dialog[22m - [90mfeatures/dialog/post_message.feature:36[39m
   Step: [1mWhen a valid new message is received for an existing user starting a new dialog[22m - [90mfeatures/dialog/post_message.feature:37[39m
   Message:
     [33mUndefined. Implement with the following snippet:

       this.When(/^a valid new message is received for an existing user starting a new dialog$/, function (callback) {
         // Write code here that turns the phrase above into concrete actions
         callback(null, 'pending');
       });[39m

7) Scenario: [1mReceived valid message from existing user for new dialog[22m - [90mfeatures/dialog/post_message.feature:36[39m
   Step: [1mThen save the Message[22m - [90mfeatures/dialog/post_message.feature:38[39m
   Message:
     [33mUndefined. Implement with the following snippet:

       this.Then(/^save the Message$/, function (callback) {
         // Write code here that turns the phrase above into concrete actions
         callback(null, 'pending');
       });[39m

8) Scenario: [1mReceived valid message from existing user for new dialog[22m - [90mfeatures/dialog/post_message.feature:36[39m
   Step: [1mAnd update Dialog with Message[22m - [90mfeatures/dialog/post_message.feature:39[39m
   Message:
     [33mUndefined. Implement with the following snippet:

       this.Then(/^update Dialog with Message$/, function (callback) {
         // Write code here that turns the phrase above into concrete actions
         callback(null, 'pending');
       });[39m

9) Scenario: [1mReceived valid message from existing user for new dialog[22m - [90mfeatures/dialog/post_message.feature:36[39m
   Step: [1mAnd update Identity with Message[22m - [90mfeatures/dialog/post_message.feature:40[39m
   Message:
     [33mUndefined. Implement with the following snippet:

       this.Then(/^update Identity with Message$/, function (callback) {
         // Write code here that turns the phrase above into concrete actions
         callback(null, 'pending');
       });[39m

10) Scenario: [1mReceived valid message from existing user for new dialog[22m - [90mfeatures/dialog/post_message.feature:36[39m
    Step: [1mAnd create a summarized Event for Message[22m - [90mfeatures/dialog/post_message.feature:41[39m
    Message:
      [33mUndefined. Implement with the following snippet:

        this.Then(/^create a summarized Event for Message$/, function (callback) {
          // Write code here that turns the phrase above into concrete actions
          callback(null, 'pending');
        });[39m

11) Scenario: [1mReceived valid message from new user[22m - [90mfeatures/dialog/post_message.feature:44[39m
    Step: [1mWhen a valid new message is received from a new user[22m - [90mfeatures/dialog/post_message.feature:45[39m
    Message:
      [33mUndefined. Implement with the following snippet:

        this.When(/^a valid new message is received from a new user$/, function (callback) {
          // Write code here that turns the phrase above into concrete actions
          callback(null, 'pending');
        });[39m

12) Scenario: [1mReceived valid message from new user[22m - [90mfeatures/dialog/post_message.feature:44[39m
    Step: [1mThen save the Message[22m - [90mfeatures/dialog/post_message.feature:46[39m
    Message:
      [33mUndefined. Implement with the following snippet:

        this.Then(/^save the Message$/, function (callback) {
          // Write code here that turns the phrase above into concrete actions
          callback(null, 'pending');
        });[39m

13) Scenario: [1mReceived valid message from new user[22m - [90mfeatures/dialog/post_message.feature:44[39m
    Step: [1mAnd update Dialog with Message[22m - [90mfeatures/dialog/post_message.feature:47[39m
    Message:
      [33mUndefined. Implement with the following snippet:

        this.Then(/^update Dialog with Message$/, function (callback) {
          // Write code here that turns the phrase above into concrete actions
          callback(null, 'pending');
        });[39m

14) Scenario: [1mReceived valid message from new user[22m - [90mfeatures/dialog/post_message.feature:44[39m
    Step: [1mAnd update Identity with Message[22m - [90mfeatures/dialog/post_message.feature:48[39m
    Message:
      [33mUndefined. Implement with the following snippet:

        this.Then(/^update Identity with Message$/, function (callback) {
          // Write code here that turns the phrase above into concrete actions
          callback(null, 'pending');
        });[39m

15) Scenario: [1mReceived valid message from new user[22m - [90mfeatures/dialog/post_message.feature:44[39m
    Step: [1mAnd create a summarized Event for Message[22m - [90mfeatures/dialog/post_message.feature:49[39m
    Message:
      [33mUndefined. Implement with the following snippet:

        this.Then(/^create a summarized Event for Message$/, function (callback) {
          // Write code here that turns the phrase above into concrete actions
          callback(null, 'pending');
        });[39m

3 scenarios ([33m3 undefined[39m)
18 steps ([33m15 undefined[39m, [32m3 passed[39m)
0m00.003s

Done.
